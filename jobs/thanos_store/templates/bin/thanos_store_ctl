#!/usr/bin/env bash

set -eu

RUN_DIR=/var/vcap/sys/run/thanos_store
LOG_DIR=/var/vcap/sys/log/thanos_store
TMP_DIR=/var/vcap/sys/tmp/thanos_store
STORE_DIR=/var/vcap/store/thanos_store
mkdir -p ${RUN_DIR} ${LOG_DIR} ${TMP_DIR} ${STORE_DIR}

PIDFILE=${RUN_DIR}/thanos_store.pid

source /var/vcap/packages/thanos/common/utils.sh
exec 1>> ${LOG_DIR}/$(basename "$0").stdout.log
exec 2>> ${LOG_DIR}/$(basename "$0").stderr.log

export PATH=/var/vcap/packages/thanos/bin:${PATH}

case $1 in
  start)
    pid_guard ${PIDFILE} "thanos_store"
    echo $$ > ${PIDFILE}

    <% if_p('env.http_proxy') do |http_proxy| %>
    export HTTP_PROXY="<%= http_proxy %>"
    export http_proxy="<%= http_proxy %>"
    <% end %>
    <% if_p('env.https_proxy') do |https_proxy| %>
    export HTTPS_PROXY="<%= https_proxy %>"
    export https_proxy="<%= https_proxy %>"
    <% end %>
    <% if_p('env.no_proxy') do |no_proxy| %>
    export NO_PROXY="<%= no_proxy %>"
    export no_proxy="<%= no_proxy %>"
    <% end %>

    <% if_p('thanos_store.gcs.application_credentials') do %>
    export GOOGLE_APPLICATION_CREDENTIALS="/var/vcap/jobs/thanos_store/config/google_application_credentials.json"
    <% end %>

    <% if_p('thanos_store.s3.secret_key') do |secret_key| %> \
    export S3_SECRET_KEY="<%= secret_key %>"
    <% end %>

    exec thanos store \
      <% if_p('thanos_store.log_level') do |log_level| %> \
      --log.level="<%= log_level %>" \
      <% end %> \
      <% if_p('thanos_store.gcloudtrace.project') do |project| %> \
      --gcloudtrace.project="<%= project %>" \
      <% end %> \
      <% if_p('thanos_store.gcloudtrace.sample_factor') do |sample_factor| %> \
      --gcloudtrace.sample-factor="<%= sample_factor %>" \
      <% end %> \
      --grpc-address="<%= spec.ip %>:<%= p('thanos_store.grpc.port') %>" \
      --http-address="<%= spec.ip %>:<%= p('thanos_store.http.port') %>" \
      --cluster.address="<%=spec.ip %>:<%= p('thanos_store.cluster.port') %>" \
      <% if_link('thanos_query') do |thanos_query| %> \
        <% thanos_query.instances.map do |instance| %> \
      --cluster.peers="<%= instance.address %>:<%= thanos_query.p('thanos_query.cluster.port') %>" \
        <% end %> \
      <% end %> \
      <% if_link('thanos_sidecar') do |thanos_sidecar| %> \
        <% thanos_sidecar.instances.map do |instance| %> \
      --cluster.peers="<%= instance.address %>:<%= thanos_sidecar.p('thanos_sidecar.cluster.port') %>" \
        <% end %> \
      <% end %> \
      <% link('thanos_store').instances.map do |instance| %> \
      --cluster.peers="<%= instance.address %>:<%= link('thanos_store').p('thanos_store.cluster.port') %>" \
      <% end %> \
      <% if_p('thanos_store.cluster.gossip_interval') do |gossip_interval| %> \
      --cluster.gossip-interval="<%= gossip_interval %>" \
      <% end %> \
      <% if_p('thanos_store.cluster.pushpull_interval') do |pushpull_interval| %> \
      --cluster.pushpull-interval="<%= bucket %>" \
      <% end %> \
      <% if_p('thanos_store.cluster.refresh_interval') do |refresh_interval| %> \
      --cluster.refresh-interval="<%= refresh_interval %>" \
      <% end %> \
      --tsdb.path="${STORE_DIR}" \
      <% if_p('thanos_store.gcs.bucket') do |bucket| %> \
      --gcs.bucket="<%= bucket %>" \
      <% end %> \
      <% if_p('thanos_store.s3.bucket') do |bucket| %> \
      --s3.bucket="<%= bucket %>" \
      <% end %> \
      <% if_p('thanos_store.s3.endpoint') do |endpoint| %> \
      --s3.endpoint="<%= endpoint %>" \
      <% end %> \
      <% if_p('thanos_store.s3.access_key') do |access_key| %> \
      --s3.access-key="<%= access_key %>" \
      <% end %> \
      <% if_p('thanos_store.s3.insecure') do |insecure| %> \
      <%= insecure ? "--s3.insecure " : "" %> \
      <% end %> \
      <% if_p('thanos_store.s3.signature_version2') do |signature_version2| %> \
      <%= signature_version2 ? "--s3.signature-version2 " : "" %> \
      <% end %> \
      <% if_p('thanos_store.s3.encrypt_sse') do |encrypt_sse| %> \
      <%= encrypt_sse ? "--s3.encrypt-sse " : "" %> \
      <% end %> \
      <% if_p('thanos_store.index_cache_size') do |index_cache_size| %> \
      --index-cache-size="<%= index_cache_size %>" \
      <% end %> \
      <% if_p('thanos_store.chunk_pool_size') do |chunk_pool_size| %> \
      --chunk-pool-size="<%= chunk_pool_size %>" \
      <% end %> \
      >>  ${LOG_DIR}/thanos_store.stdout.log \
      2>> ${LOG_DIR}/thanos_store.stderr.log
    ;;

  stop)
    kill_and_wait ${PIDFILE}
    ;;

  *)
    echo "Usage: $0 {start|stop}"
    exit 1
  ;;

esac
exit 0
