#!/usr/bin/env bash

set -eu

RUN_DIR=/var/vcap/sys/run/thanos_sidecar
LOG_DIR=/var/vcap/sys/log/thanos_sidecar
TMP_DIR=/var/vcap/sys/tmp/thanos_sidecar
STORE_DIR=/var/vcap/store/thanos_sidecar
mkdir -p ${RUN_DIR} ${LOG_DIR} ${TMP_DIR} ${STORE_DIR}

PIDFILE=${RUN_DIR}/thanos_sidecar.pid

source /var/vcap/packages/thanos/common/utils.sh
exec 1>> ${LOG_DIR}/$(basename "$0").stdout.log
exec 2>> ${LOG_DIR}/$(basename "$0").stderr.log

export PATH=/var/vcap/packages/thanos/bin:${PATH}

case $1 in
  start)
    pid_guard ${PIDFILE} "thanos_sidecar"
    echo $$ > ${PIDFILE}

    <% if_p('env.http_proxy') do |http_proxy| %>
    export HTTP_PROXY="<%= http_proxy %>"
    export http_proxy="<%= http_proxy %>"
    <% end %>
    <% if_p('env.https_proxy') do |https_proxy| %>
    export HTTPS_PROXY="<%= https_proxy %>"
    export https_proxy="<%= https_proxy %>"
    <% end %>
    <% if_p('env.no_proxy') do |no_proxy| %>
    export NO_PROXY="<%= no_proxy %>"
    export no_proxy="<%= no_proxy %>"
    <% end %>

    <% if_p('thanos_sidecar.gcs.application_credentials') do %>
    export GOOGLE_APPLICATION_CREDENTIALS="/var/vcap/jobs/thanos_sidecar/config/google_application_credentials.json"
    <% end %>

    <% if_p('thanos_sidecar.s3.secret_key') do |secret_key| %> \
    export S3_SECRET_KEY="<%= secret_key %>"
    <% end %>

    exec thanos sidecar \
      <% if_p('thanos_sidecar.log_level') do |log_level| %> \
      --log.level="<%= log_level %>" \
      <% end %> \
      <% if_p('thanos_sidecar.gcloudtrace.project') do |project| %> \
      --gcloudtrace.project="<%= project %>" \
      <% end %> \
      <% if_p('thanos_sidecar.gcloudtrace.sample_factor') do |sample_factor| %> \
      --gcloudtrace.sample-factor="<%= sample_factor %>" \
      <% end %> \
      --grpc-address="<%= spec.ip %>:<%= p('thanos_sidecar.grpc.port') %>" \
      --http-address="<%= spec.ip %>:<%= p('thanos_sidecar.http.port') %>" \
      --cluster.address="<%= spec.ip %>:<%= p('thanos_sidecar.cluster.port') %>" \
      <% if_link('thanos_query') do |thanos_query| %> \
        <% thanos_query.instances.map do |instance| %> \
      --cluster.peers="<%= instance.address %>:<%= thanos_query.p('thanos_query.cluster.port') %>" \
        <% end %> \
      <% end %> \
      <% link('thanos_sidecar').instances.map do |instance| %> \
      --cluster.peers="<%= instance.address %>:<%= link('thanos_sidecar').p('thanos_sidecar.cluster.port') %>" \
      <% end %> \
      <% if_link('thanos_store') do |thanos_store| %> \
        <% thanos_store.instances.map do |instance| %> \
      --cluster.peers="<%= instance.address %>:<%= thanos_store.p('thanos_store.cluster.port') %>" \
        <% end %> \
      <% end %> \
      <% if_p('thanos_sidecar.cluster.gossip_interval') do |gossip_interval| %> \
      --cluster.gossip-interval="<%= gossip_interval %>" \
      <% end %> \
      <% if_p('thanos_sidecar.cluster.pushpull_interval') do |pushpull_interval| %> \
      --cluster.pushpull-interval="<%= bucket %>" \
      <% end %> \
      <% if_p('thanos_sidecar.cluster.refresh_interval') do |refresh_interval| %> \
      --cluster.refresh-interval="<%= refresh_interval %>" \
      <% end %> \
      --prometheus.url="http://127.0.0.1:<%= link('prometheus').p('prometheus.web.port') %>" \
      --tsdb.path="<%= p('thanos_sidecar.tsdb.path') %>" \
      <% if_p('thanos_sidecar.gcs.bucket') do |bucket| %> \
      --gcs.bucket="<%= bucket %>" \
      <% end %> \
      <% if_p('thanos_sidecar.s3.bucket') do |bucket| %> \
      --s3.bucket="<%= bucket %>" \
      <% end %> \
      <% if_p('thanos_sidecar.s3.endpoint') do |endpoint| %> \
      --s3.endpoint="<%= endpoint %>" \
      <% end %> \
      <% if_p('thanos_sidecar.s3.access_key') do |access_key| %> \
      --s3.access-key="<%= access_key %>" \
      <% end %> \
      <% if_p('thanos_sidecar.s3.insecure') do |insecure| %> \
      <%= insecure ? "--s3.insecure " : "" %> \
      <% end %> \
      <% if_p('thanos_sidecar.s3.signature_version2') do |signature_version2| %> \
      <%= signature_version2 ? "--s3.signature-version2 " : "" %> \
      <% end %> \
      <% if_p('thanos_sidecar.s3.encrypt_sse') do |encrypt_sse| %> \
      <%= encrypt_sse ? "--s3.encrypt-sse " : "" %> \
      <% end %> \
      <% if_p('thanos_sidecar.reloader.config_file') do |config_file| %> \
      --reloader.config-file="<%= config_file %>" \
      <% end %> \
      --reloader.config-envsubst-file="${STORE_DIR}/reloader_config_envsubst" \
      <% if_p('thanos_sidecar.reloader.rule_dir') do |rule_dir| %> \
      --reloader.rule-dir="<%= rule_dir %>" \
      <% end %> \
      >>  ${LOG_DIR}/thanos_sidecar.stdout.log \
      2>> ${LOG_DIR}/thanos_sidecar.stderr.log
    ;;

  stop)
    kill_and_wait ${PIDFILE}
    ;;

  *)
    echo "Usage: $0 {start|stop}"
    exit 1
  ;;

esac
exit 0
